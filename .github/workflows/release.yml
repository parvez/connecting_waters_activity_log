name: Build and Release Binaries

permissions:
  contents: write  # Ensure we have write access to create a release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create dist directories if not exist
        run: |
          mkdir -p dist/ubuntu
          mkdir -p dist/macos
          mkdir -p dist/windows
        shell: bash

      - name: Build binary with PyInstaller
        run: |
          pyinstaller --onefile student_log_script.py
        shell: bash

      - name: Move the binary to platform-specific dist folder
        run: |
          if [[ "${{ matrix.os }}" == 'ubuntu-latest' ]]; then
            mv dist/student_log_script dist/ubuntu/student_log_script;
          elif [[ "${{ matrix.os }}" == 'macos-latest' ]]; then
            mv dist/student_log_script dist/macos/student_log_script;
          elif [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
            mv dist/student_log_script.exe dist/windows/student_log_script.exe;
          fi
        shell: bash

      - name: List dist folder contents (debug step)
        run: ls -R dist/

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-binary
          path: |
            dist/ubuntu/student_log_script
            dist/macos/student_log_script
            dist/windows/student_log_script.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Create dist directories for release
        run: |
          mkdir -p dist/ubuntu
          mkdir -p dist/macos
          mkdir -p dist/windows

      - name: Download binaries from build jobs
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest-binary
          path: dist/ubuntu

      - name: Download macOS binary
        uses: actions/download-artifact@v3
        with:
          name: macos-latest-binary
          path: dist/macos

      - name: Download Windows binary
        uses: actions/download-artifact@v3
        with:
          name: windows-latest-binary
          path: dist/windows

      - name: List dist folder contents (debug step)
        run: ls -R dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/ubuntu/student_log_script
            dist/macos/student_log_script
            dist/windows/student_log_script.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
